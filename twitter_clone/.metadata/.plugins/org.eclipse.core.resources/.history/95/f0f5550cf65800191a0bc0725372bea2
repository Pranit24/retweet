package com.me.validator;

import org.springframework.validation.Errors;
import org.springframework.validation.ValidationUtils;
import org.springframework.validation.Validator;

import com.me.dao.UserDao;
import com.me.pojo.User;

public class RegisterValidator  implements Validator{

	@Override
	public boolean supports(Class<?> clazz) {
		return User.class.isAssignableFrom(clazz);
	}

	@Override
	public void validate(Object target, Errors errors) {
		ValidationUtils.rejectIfEmptyOrWhitespace(errors, "name", "", "Please enter a name");
		ValidationUtils.rejectIfEmptyOrWhitespace(errors, "password", "", "Please enter a password");
		ValidationUtils.rejectIfEmptyOrWhitespace(errors, "handle", "", "Please enter a handle");
		User user = (User) target;
		
		if(user.getEmail().equals("")) {
			errors.rejectValue("email","", "Enter an email address");
		}
		else if(!user.getEmail().matches("^[a-zA-Z0-9]+@[a-zA-Z0-9]+(.[a-zA-Z]{2,})$")) {
			errors.rejectValue("email", "","Enter a valid email address!");
		}

		if(errors.hasErrors()) return;
		UserDao userDao = new UserDao();
		if(userDao.alreadyExists("email", user.getEmail())) {
			errors.rejectValue("email", "", "Email already in use");
		}
		if(userDao.alreadyExists("handle", user.getHandle())) {
			errors.rejectValue("handle", "", "Handle already in use");
		}
		
	}
}
